'''
  Питон поддерживает все основые математические операции (с числами):
  Сложение +
  Вычитание -
  Умножение *
  Деление /
  Целочисленное деление //
  Остаток от деления % (то, что я рассказывал про суммы по модулю, огромнный мат. аппарат)
  Возведение в степень **
  Чтобы сделать число отрицательным, нужно добавить перед ним знак -
  -541
  -6244.94
'''
a, b = 5, 2
print(a + b)
print(a - b)
print(a * b)
print(a / b)
print(a // b)
print(a % b)
print(a ** b)

'''
  Не у каждого объекта в питоне поддерживается та или иная операция, например, 
  нельзя вычесть список из списка (но можно сложить), такая операция просто не определена, 
  про добавление такой операции поговорим позже, но это важно учитывать
  
  Про конструкцию try: except: finally: расскажу позже, она позволяет игнорировать ошибки в коде
  Не прерывая его исполнение
'''
try:
    print([] - [1])
except Exception as e:
    print("\n", e, "<- это проигнорированная ошибка\n")


'''
  В питоне существуют сокращения операций, благодаря которым можно сократить время написания кода
  Сокращённые операции обозначаются так +=, -=, *=, /= и т.д.
  Они сохраняют в переменную результат мат. операции без переприсвоения переменной
  Пояснить лучше на примере
'''
per_1, per_2 = 9, 6
#  Допустим, нам надо записать в переменную per_1 результат вычитания из per_1 значения перменной per_2
#  Как это выглядит без сокращения
per_1 = per_1 - per_2
print(per_1)

#  Немного громоздко, но как выглядит сокращение?
per_1, per_2 = 9, 6
per_1 -= per_2
print(per_1, "\n")
#  Как видишь, в консоли значения одинаковые

'''
  Приоритет математических операций такой же, как и в обычной математике:
  1. Действие в скобках 
  2. Возведение в степень
  3. Умножение, деление (целочисленное деление) в правом порядке (слева на право)
  4. Сложение, вычитание (неважно как, ибо имеет место перестановочный закон)
'''

res = 2 * 2 + 3 # Выведет 7 (результат 4 + 3)
print(res)

#  Благодаря скобкам можно задать свой приоритет
res = 2 * (2 + 3) # Выведет 10 (результат 2 * 5)
print(res, "\n")

'''
  Стоит упомянуть, что в питоне сняты ограничения на длину чисел в 64 бит (32 бит) (много пиздец),
  Поэтому ты можешь писать ЛЮБЫЕ числа, что взбредут тебе в голову и питон это проглотит, вот они, -
  преимущества динамической типизации и памяти
'''

'''
  Все вышеописанные действия можно повторить и числами с плавающей точкой,
  Объявить такую переменную можно так 1.5
'''
float_number = 1.7
print(float_number)
print(994.3123)
print(1.0)
print(0.0)