#  Для написания какого-либо поясняющего текста в коде используется #
#  Это неисполняемые строки, они игнорируются компилятором
#  Всё, что после # есть комментарий, даже пустая строка)
#  Принято делать 2 отступа от комментария, но это кому как, похер зачастую

'''
  Для многострочных комментариев используются '''''',
  Как сама можешь заметить
'''

#  Вывод данных в консоль производится с помощью функции print()
#  Внутри скобочек можно ЧЕРЕЗ ЗАПЯТУЮ указывать всё, что хочешь: переменные, вручную написанные строки и прочее

#  Выведет "Я строка" и создаст новую строку после неё с помощью нового символа \n
print("Я строка\n")

#  Выведет 5
print(5, "\n")

#  Для удобства работы с кодом, для большей адаптивности и модульности используются переменные
#  Переменные это такие контейнеры, в которые можно что-то положить и подписать, мол, тут хранится
#  Число 10, потом по этой подписи найти то, что хранится в нём
#  Переменные объявляются знаком =
#  Объявим переменную abc со значением "Я значение"
abc = "Я значение"
print(abc, "\n")

'''  
  Переменные могут быть названы как угодно, соблюдая такое правило:
  Название должно быть НЕРАЗРЫВНО, т.е. нельзя назвать переменную d e g, но можно d_e_g.
  Это позволяет называть переменные осмысленно, так для разных температур можно объявить разные переменные
  temperature_celcius и temperature_kelvins
'''


# Убери следующую # и увидишь, что подчёркивается красным, так делать нельзя
# a b c = 1
# А так можно!
a_b_c = "5"
print(a_b_c, "\n")

#  Python позволяет также объявлять несколько переменных в одной строке, например
per_1, per_2 = 1, 2
print(per_1, per_2, "\n")

'''
  Так как в питоне может быть множество различных объектов (классов), существует функция type()
  Она позволяет узнать, к какому типу данных принадлежит переменная
  Следующая строка кода выведет тип данных int и будет права!
'''
print(type(5))
